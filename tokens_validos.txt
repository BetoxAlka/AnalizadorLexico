ID	include	Línea: 2, Columna: 2
OP	<	Línea: 2, Columna: 10
ID	stdio	Línea: 2, Columna: 11
ID	h	Línea: 2, Columna: 17
OP	>	Línea: 2, Columna: 18
K	int	Línea: 4, Columna: 1
ID	main	Línea: 4, Columna: 5
OP	(	Línea: 4, Columna: 9
OP	)	Línea: 4, Columna: 10
OP	{	Línea: 4, Columna: 12
K	int	Línea: 5, Columna: 5
ID	num	Línea: 5, Columna: 9
OP	;	Línea: 5, Columna: 12
ID	do	Línea: 6, Columna: 5
OP	{	Línea: 6, Columna: 8
ID	printf	Línea: 7, Columna: 9
OP	(	Línea: 7, Columna: 15
STR	"Ingrese un numero entre 1 y 5: "	Línea: 7, Columna: 16
OP	)	Línea: 7, Columna: 49
OP	;	Línea: 7, Columna: 50
ID	num	Línea: 8, Columna: 9
OP	=	Línea: 8, Columna: 13
ID	getchar	Línea: 8, Columna: 15
OP	(	Línea: 8, Columna: 22
OP	)	Línea: 8, Columna: 23
OP	-	Línea: 8, Columna: 25
NUM	0	Línea: 8, Columna: 28
OP	;	Línea: 8, Columna: 30
K	while	Línea: 9, Columna: 9
OP	(	Línea: 9, Columna: 14
ID	getchar	Línea: 9, Columna: 15
OP	(	Línea: 9, Columna: 22
OP	)	Línea: 9, Columna: 23
OP	!=	Línea: 9, Columna: 25
ID	n	Línea: 9, Columna: 30
OP	)	Línea: 9, Columna: 32
OP	;	Línea: 9, Columna: 33
OP	/	Línea: 9, Columna: 35
OP	/	Línea: 9, Columna: 36
ID	Limpiar	Línea: 9, Columna: 38
ID	buffer	Línea: 9, Columna: 46
OP	}	Línea: 10, Columna: 5
K	while	Línea: 10, Columna: 7
OP	(	Línea: 10, Columna: 13
ID	num	Línea: 10, Columna: 14
OP	<	Línea: 10, Columna: 18
NUM	1	Línea: 10, Columna: 20
ID	num	Línea: 10, Columna: 25
OP	>	Línea: 10, Columna: 29
NUM	5	Línea: 10, Columna: 31
OP	)	Línea: 10, Columna: 32
OP	;	Línea: 10, Columna: 33
ID	printf	Línea: 11, Columna: 5
OP	(	Línea: 11, Columna: 11
STR	"Numero valido: %d\n"	Línea: 11, Columna: 12
ID	num	Línea: 11, Columna: 35
OP	)	Línea: 11, Columna: 38
OP	;	Línea: 11, Columna: 39
K	return	Línea: 12, Columna: 5
NUM	0	Línea: 12, Columna: 12
OP	;	Línea: 12, Columna: 13
OP	}	Línea: 13, Columna: 1
